//
//  EmojiCollectionViewController.swift
//  Tracker
//
//  Created by Marina Kolbina on 02/04/2023.
//

import Foundation
import UIKit

class EmojiCollectionViewController: UIViewController, UICollectionViewDelegate {
    
    let emojis = [
        "üôÇ", "üòª", "üå∫", "üê∂", "‚ù§Ô∏è", "üò±",
        "üòá", "üò°", "ü•∂", "ü§î", "üôå", "üçî",
        "ü•¶", "üèì", "ü•á", "üé∏", "üèù", "üò™",
    ]
   
   var emojiCollectionView = UICollectionView(frame: .zero, collectionViewLayout: UICollectionViewFlowLayout())
   
   override func viewDidLoad() {
       view.addSubview(emojiCollectionView)
       emojiCollectionView.delegate = self
       emojiCollectionView.dataSource = self
       emojiCollectionView.register(EmojiCollectionViewCell.self, forCellWithReuseIdentifier: "cell")
       emojiCollectionView.register(SupplementaryView.self, forSupplementaryViewOfKind: UICollectionView.elementKindSectionHeader, withReuseIdentifier: "header")
       
       emojiCollectionView.allowsMultipleSelection = false
       emojiCollectionView.translatesAutoresizingMaskIntoConstraints = false
       
       [emojiCollectionView].forEach { item in
           item.translatesAutoresizingMaskIntoConstraints = false
           view.addSubview(item)
       }
       
       NSLayoutConstraint.activate([
           emojiCollectionView.topAnchor.constraint(equalTo: view.topAnchor),
           emojiCollectionView.bottomAnchor.constraint(equalTo: view.bottomAnchor),
           emojiCollectionView.leadingAnchor.constraint(equalTo: view.leadingAnchor),
           emojiCollectionView.trailingAnchor.constraint(equalTo: view.trailingAnchor)
       ])
   }
}
 
 
extension EmojiCollectionViewController: UICollectionViewDataSource {
   
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return emojis.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "cell", for: indexPath) as? EmojiCollectionViewCell
        
        cell?.titleLabel.text = emojis[indexPath.row]
        cell?.titleLabel.font = UIFont(name:"HelveticaNeue-Bold", size: 30.0)
        return cell!
    }
    
    func collectionView(_ collectionView: UICollectionView, viewForSupplementaryElementOfKind kind: String, at indexPath: IndexPath) -> UICollectionReusableView {
        var id: String
        switch kind {
        case UICollectionView.elementKindSectionHeader:
            id = "header"
        case UICollectionView.elementKindSectionFooter:
            id = "footer"
        default:
            id = ""
        }
        
        guard let view = collectionView.dequeueReusableSupplementaryView(ofKind: kind, withReuseIdentifier: id, for: indexPath) as? SupplementaryView
        else {
            return UICollectionReusableView()
        }
        
        view.titleLabel.text = "Emoji"
        view.titleLabel.font = UIFont(name:"HelveticaNeue-Bold", size: 19.0)
        
        NSLayoutConstraint.activate([
            view.titleLabel.leadingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leadingAnchor, constant: 14)
            ])
//        view.titleLabel.leadingAnchor.constraint(equalTo: 28)
        return view
    }
}
 
extension EmojiCollectionViewController: UICollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, referenceSizeForHeaderInSection section: Int) -> CGSize {
        
        let indexPath = IndexPath(row: 0, section: section)
        let headerView = self.collectionView(collectionView, viewForSupplementaryElementOfKind: UICollectionView.elementKindSectionHeader, at: indexPath)
        
        return headerView.systemLayoutSizeFitting(CGSize(width: collectionView.frame.width,
                                                         height: UIView.layoutFittingExpandedSize.height),
                                                         withHorizontalFittingPriority: .required,
                                                         verticalFittingPriority: .fittingSizeLevel)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: collectionView.bounds.width / 7, height: 40)
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        if let cell = collectionView.cellForItem(at: indexPath) {
            cell.backgroundColor = UIColor(named: "grey_for_textField")
        }
    }
    
    func collectionView(_ collectionView: UICollectionView, didDeselectItemAt indexPath: IndexPath) {
        let cell = collectionView.cellForItem(at: indexPath) as? EmojiCollectionViewCell
        cell?.backgroundColor = .white
    }
 
 
//    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
//        return 12
//    }
}
 
//–≠—Ç–æ—Ç –∫–æ–¥ —Å–æ–∑–¥–∞–µ—Ç —ç–∫—Ä–∞–Ω —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–±—Ä–∞—Ç—å –æ–¥–Ω—É. –í–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤ emojis, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –Ω–∞–±–æ—Ä —ç–º–æ–¥–∑–∏, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ. –¢–∞–∫–∂–µ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è emojiCollectionView, –∫–æ—Ç–æ—Ä–∞—è —è–≤–ª—è–µ—Ç—Å—è —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º UICollectionView —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ñ—Ä–µ–π–º–æ–º –∏ —Ä–∞—Å–∫–ª–∞–¥–∫–æ–π UICollectionViewFlowLayout. –í –º–µ—Ç–æ–¥–µ viewDidLoad –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è —ç–∫—Ä–∞–Ω, –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è emojiCollectionView –Ω–∞ view, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ –¥–µ–ª–µ–≥–∞—Ç–∞ –∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö, —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è —è—á–µ–π–∫–∞ EmojiCollectionViewCell –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ SupplementaryView (—à–∞–ø–∫–∞). –î–∞–ª–µ–µ –∑–∞–¥–∞—é—Ç—Å—è —Å–≤–æ–π—Å—Ç–≤–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —ç–∫—Ä–∞–Ω–µ –∏ –∞–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è NSLayoutConstraint. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ EmojiCollectionViewController: UICollectionViewDataSource —Ä–µ–∞–ª–∏–∑—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–µ—Ç–æ–¥—ã –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–ª–ª–µ–∫—Ü–∏–∏, —Å–æ–∑–¥–∞–Ω–∏–µ —è—á–µ–π–∫–∏ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–æ–≤. –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ EmojiCollectionViewController: UICollectionViewDelegateFlowLayout —Å–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥—ã –¥–µ–ª–µ–≥–∞—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø—Ä–µ–¥–µ–ª—è—é—Ç —Ä–∞–∑–º–µ—Ä—ã —è—á–µ–µ–∫ –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π, –∞ —Ç–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç –≤—ã–±–æ—Ä –∏ —Å–Ω—è—Ç–∏–µ –≤—ã–¥–µ–ª–µ–Ω–∏—è —Å —è—á–µ–π–∫–∏.
